{
  "address": "0x508D19D895cBE0B11437D7a7D2FBAB3384bdA440",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "input_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "input_reserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "output_reserve",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "tokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liq_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7c30db88e784dccbda49272da0538fbd27a364e1cadac497a2f7c151fae7d9a8",
  "receipt": {
    "to": null,
    "from": "0xf267A3a81e0d949186921a818467E8434524367C",
    "contractAddress": "0x508D19D895cBE0B11437D7a7D2FBAB3384bdA440",
    "transactionIndex": 20,
    "gasUsed": "646583",
    "logsBloom": "0x
    "blockHash": "0x7eb9741b1962019843f234a6cc22a1002242166f9bea80052c214a613d8af1c0",
    "transactionHash": "0x7c30db88e784dccbda49272da0538fbd27a364e1cadac497a2f7c151fae7d9a8",
    "logs": [],
    "blockNumber": 10751844,
    "cumulativeGasUsed": "9319486",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa25E4Cc3D7F10F3D3897778a42DA48227B38DA19"
  ],
  "solcInputHash": "93e9213d589998d61ad1920ba65bfb3e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"input_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"input_reserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"output_reserve\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"tokenToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liq_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/DEX.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\n// SPDX-License-Identifier: MIT\\n// import \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract DEX {\\n\\n  IERC20 token;\\n\\n  constructor(address token_addr) {\\n    token = IERC20(token_addr);\\n  }\\n\\n  uint256 public totalLiquidity;\\n  mapping(address => uint256) public liquidity;\\n\\n  function init(uint256 tokens) public payable returns (uint256) {\\n    require(totalLiquidity == 0, \\\"DEX: init - already has liquidity\\\");\\n    totalLiquidity = address(this).balance;\\n    liquidity[msg.sender] = totalLiquidity;\\n    require(token.transferFrom(msg.sender, address(this), tokens));\\n    return totalLiquidity;\\n  }\\n\\n  function price(uint256 input_amount, uint256 input_reserve, uint256 output_reserve) public view returns (uint256) {\\n    uint256 input_amount_with_fee = input_amount * 997;\\n    uint256 numerator = input_amount_with_fee * output_reserve;\\n    uint256 denominator = (input_reserve * 1000) + input_amount_with_fee;\\n    return numerator / denominator;\\n  }\\n\\n  function ethToToken() public payable returns (uint256) {\\n    uint256 token_reserve = token.balanceOf(address(this));\\n    uint256 tokens_bought = price(msg.value, address(this).balance - msg.value, token_reserve);\\n    require(token.transfer(msg.sender, tokens_bought));\\n    return tokens_bought;\\n  }\\n\\n  function tokenToEth(uint256 tokens) public returns (uint256) {\\n    uint256 token_reserve = token.balanceOf(address(this));\\n    uint256 eth_bought = price(tokens, token_reserve, address(this).balance);\\n    (bool sent, ) = msg.sender.call{value: eth_bought}(\\\"\\\");\\n    require(sent, \\\"Failed to send user eth\\\");\\n    return eth_bought;\\n  }\\n\\n  function deposit() public payable returns (uint256) {\\n    uint256 eth_reserve = address(this).balance - msg.value;\\n    uint256 token_reserve = token.balanceOf(address(this));\\n    uint256 token_amount = ((msg.value * token_reserve) / eth_reserve) + 1;\\n    uint256 liquidity_minted = (msg.value * totalLiquidity) / eth_reserve;\\n    liquidity[msg.sender] += liquidity_minted;\\n    totalLiquidity += liquidity_minted;\\n    require(token.transferFrom(msg.sender, address(this), token_amount));\\n    return liquidity_minted;\\n  }\\n\\n  function withdraw(uint256 liq_amount) public returns (uint256, uint256) {\\n    uint256 token_reserve = token.balanceOf(address(this));\\n    uint256 eth_amount = (liq_amount * address(this).balance) / totalLiquidity;\\n    uint256 token_amount = (liq_amount * token_reserve) / totalLiquidity;\\n    liquidity[msg.sender] -= liq_amount;\\n    (bool sent, ) = msg.sender.call{value: eth_amount}(\\\"\\\");\\n    require(sent, \\\"Failed to send user eth.\\\");\\n    require(token.transfer(msg.sender, token_amount));\\n    return (eth_amount, token_amount);\\n  }\\n}\",\"keccak256\":\"0xd8370ab2bba28219a320362401b52c1d647a494449899a8af12fc881e57bcc0a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ade380380610ade83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610a4d806100916000396000f3fe60806040526004361061007b5760003560e01c8063789770f41161004e578063789770f41461011e578063b7b0422d14610126578063b8c876b114610139578063d0e30db01461016657600080fd5b806315770f92146100805780632071a9f4146100a95780632e1a7d4d146100c957806370b2a30f146100fe575b600080fd5b34801561008c57600080fd5b5061009660015481565b6040519081526020015b60405180910390f35b3480156100b557600080fd5b506100966100c4366004610968565b61016e565b3480156100d557600080fd5b506100e96100e4366004610938565b6101bd565b604080519283526020830191909152016100a0565b34801561010a57600080fd5b50610096610119366004610938565b6103d6565b610096610504565b610096610134366004610938565b61062c565b34801561014557600080fd5b506100966101543660046108ea565b60026020526000908152604090205481565b61009661073e565b60008061017d856103e56109cb565b9050600061018b84836109cb565b905060008261019c876103e86109cb565b6101a69190610993565b90506101b281836109ab565b979650505050505050565b600080546040516370a0823160e01b8152306004820152829182916001600160a01b03909116906370a082319060240160206040518083038186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610950565b90506000600154478661025091906109cb565b61025a91906109ab565b90506000600154838761026d91906109cb565b61027791906109ab565b3360009081526002602052604081208054929350889290919061029b9084906109ea565b9091555050604051600090339084908381818185875af1925050503d80600081146102e2576040519150601f19603f3d011682016040523d82523d6000602084013e6102e7565b606091505b505090508061033d5760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2073656e642075736572206574682e000000000000000060448201526064015b60405180910390fd5b60005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610918565b6103ca57600080fd5b50909590945092505050565b600080546040516370a0823160e01b815230600482015282916001600160a01b0316906370a082319060240160206040518083038186803b15801561041a57600080fd5b505afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190610950565b9050600061046184834761016e565b604051909150600090339083908381818185875af1925050503d80600081146104a6576040519150601f19603f3d011682016040523d82523d6000602084013e6104ab565b606091505b50509050806104fc5760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2073656e642075736572206574680000000000000000006044820152606401610334565b509392505050565b600080546040516370a0823160e01b815230600482015282916001600160a01b0316906370a082319060240160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190610950565b905060006105983461059281476109ea565b8461016e565b60005460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610918565b61062657600080fd5b92915050565b600060015460001461068a5760405162461bcd60e51b815260206004820152602160248201527f4445583a20696e6974202d20616c726561647920686173206c697175696469746044820152607960f81b6064820152608401610334565b47600181905533600081815260026020526040808220939093555491516323b872dd60e01b81526004810191909152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190610918565b61073657600080fd5b505060015490565b60008061074b34476109ea565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a082319060240160206040518083038186803b15801561079457600080fd5b505afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190610950565b90506000826107db83346109cb565b6107e591906109ab565b6107f0906001610993565b90506000836001543461080391906109cb565b61080d91906109ab565b33600090815260026020526040812080549293508392909190610831908490610993565b92505081905550806001600082825461084a9190610993565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190610918565b6108e257600080fd5b949350505050565b6000602082840312156108fb578081fd5b81356001600160a01b0381168114610911578182fd5b9392505050565b600060208284031215610929578081fd5b81518015158114610911578182fd5b600060208284031215610949578081fd5b5035919050565b600060208284031215610961578081fd5b5051919050565b60008060006060848603121561097c578182fd5b505081359360208301359350604090920135919050565b600082198211156109a6576109a6610a01565b500190565b6000826109c657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109e5576109e5610a01565b500290565b6000828210156109fc576109fc610a01565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb26835a3e64d6552392330a031d99d952a443fa0d6692cfd6a8710bdaf2666c64736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063789770f41161004e578063789770f41461011e578063b7b0422d14610126578063b8c876b114610139578063d0e30db01461016657600080fd5b806315770f92146100805780632071a9f4146100a95780632e1a7d4d146100c957806370b2a30f146100fe575b600080fd5b34801561008c57600080fd5b5061009660015481565b6040519081526020015b60405180910390f35b3480156100b557600080fd5b506100966100c4366004610968565b61016e565b3480156100d557600080fd5b506100e96100e4366004610938565b6101bd565b604080519283526020830191909152016100a0565b34801561010a57600080fd5b50610096610119366004610938565b6103d6565b610096610504565b610096610134366004610938565b61062c565b34801561014557600080fd5b506100966101543660046108ea565b60026020526000908152604090205481565b61009661073e565b60008061017d856103e56109cb565b9050600061018b84836109cb565b905060008261019c876103e86109cb565b6101a69190610993565b90506101b281836109ab565b979650505050505050565b600080546040516370a0823160e01b8152306004820152829182916001600160a01b03909116906370a082319060240160206040518083038186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610950565b90506000600154478661025091906109cb565b61025a91906109ab565b90506000600154838761026d91906109cb565b61027791906109ab565b3360009081526002602052604081208054929350889290919061029b9084906109ea565b9091555050604051600090339084908381818185875af1925050503d80600081146102e2576040519150601f19603f3d011682016040523d82523d6000602084013e6102e7565b606091505b505090508061033d5760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2073656e642075736572206574682e000000000000000060448201526064015b60405180910390fd5b60005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610918565b6103ca57600080fd5b50909590945092505050565b600080546040516370a0823160e01b815230600482015282916001600160a01b0316906370a082319060240160206040518083038186803b15801561041a57600080fd5b505afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190610950565b9050600061046184834761016e565b604051909150600090339083908381818185875af1925050503d80600081146104a6576040519150601f19603f3d011682016040523d82523d6000602084013e6104ab565b606091505b50509050806104fc5760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2073656e642075736572206574680000000000000000006044820152606401610334565b509392505050565b600080546040516370a0823160e01b815230600482015282916001600160a01b0316906370a082319060240160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190610950565b905060006105983461059281476109ea565b8461016e565b60005460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610918565b61062657600080fd5b92915050565b600060015460001461068a5760405162461bcd60e51b815260206004820152602160248201527f4445583a20696e6974202d20616c726561647920686173206c697175696469746044820152607960f81b6064820152608401610334565b47600181905533600081815260026020526040808220939093555491516323b872dd60e01b81526004810191909152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190610918565b61073657600080fd5b505060015490565b60008061074b34476109ea565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a082319060240160206040518083038186803b15801561079457600080fd5b505afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190610950565b90506000826107db83346109cb565b6107e591906109ab565b6107f0906001610993565b90506000836001543461080391906109cb565b61080d91906109ab565b33600090815260026020526040812080549293508392909190610831908490610993565b92505081905550806001600082825461084a9190610993565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190610918565b6108e257600080fd5b949350505050565b6000602082840312156108fb578081fd5b81356001600160a01b0381168114610911578182fd5b9392505050565b600060208284031215610929578081fd5b81518015158114610911578182fd5b600060208284031215610949578081fd5b5035919050565b600060208284031215610961578081fd5b5051919050565b60008060006060848603121561097c578182fd5b505081359360208301359350604090920135919050565b600082198211156109a6576109a6610a01565b500190565b6000826109c657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109e5576109e5610a01565b500290565b6000828210156109fc576109fc610a01565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb26835a3e64d6552392330a031d99d952a443fa0d6692cfd6a8710bdaf2666c64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 703,
        "contract": "contracts/DEX.sol:DEX",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)623"
      },
      {
        "astId": 717,
        "contract": "contracts/DEX.sol:DEX",
        "label": "totalLiquidity",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 721,
        "contract": "contracts/DEX.sol:DEX",
        "label": "liquidity",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)623": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}