{"ast":null,"code":"import _regeneratorRuntime from\"/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{CameraOutlined,QrcodeOutlined}from\"@ant-design/icons\";import{Badge,Input,message,Spin}from\"antd\";import{useLookupAddress}from\"eth-hooks/dapps/ens\";import React,{useCallback,useState}from\"react\";import QrReader from\"react-qr-reader\";import Blockie from\"./Blockie\";// probably we need to change value={toAddress} to address={toAddress}\n/*\n  ~ What it does? ~\n  Displays an address input with QR scan option\n  ~ How can I use? ~\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n  ~ Features ~\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddressInput(props){var _useState=useState(props.address),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),scan=_useState4[0],setScan=_useState4[1];var currentValue=typeof props.value!==\"undefined\"?props.value:value;var ens=useLookupAddress(props.ensProvider,currentValue);var scannerButton=/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:4,cursor:\"pointer\"},onClick:function onClick(){setScan(!scan);},children:[/*#__PURE__*/_jsx(Badge,{count:/*#__PURE__*/_jsx(CameraOutlined,{style:{color:\"#000000\",fontSize:9}}),children:/*#__PURE__*/_jsx(QrcodeOutlined,{style:{color:\"#000000\",fontSize:18}})}),\" \",\"Scan\"]});var ensProvider=props.ensProvider,onChange=props.onChange;var updateAddress=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(newValue){var address,possibleAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof newValue!==\"undefined\")){_context.next=20;break;}console.log(\"SCAN\",newValue);/*console.log(\"ðŸ”‘ Incoming Private Key...\");\n        rawPK = incomingPK;\n        burnerConfig.privateKey = rawPK;\n        window.history.pushState({}, \"\", \"/\");\n        const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n        if (currentPrivateKey && currentPrivateKey !== rawPK) {\n          window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n        }\n        window.localStorage.setItem(\"metaPrivateKey\", rawPK);*/if(!(newValue&&newValue.indexOf&&newValue.indexOf(\"wc:\")===0)){_context.next=6;break;}props.walletConnect(newValue);_context.next=20;break;case 6:address=newValue;setValue(address);if(!(address.indexOf(\".eth\")>0||address.indexOf(\".xyz\")>0)){_context.next=18;break;}_context.prev=9;_context.next=12;return ensProvider.resolveName(address);case 12:possibleAddress=_context.sent;if(possibleAddress){address=possibleAddress;}// eslint-disable-next-line no-empty\n_context.next=18;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](9);case 18:setValue(address);if(typeof onChange===\"function\"){onChange(address);}case 20:case\"end\":return _context.stop();}}},_callee,null,[[9,16]]);}));return function(_x){return _ref.apply(this,arguments);};}(),[ensProvider,onChange]);var scanner=scan?/*#__PURE__*/_jsxs(\"div\",{style:{zIndex:256,position:\"absolute\",left:\"-25%\",top:\"-150%\",width:\"150%\",backgroundColor:\"#333333\"},onClick:function onClick(){setScan(false);},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:16,position:\"absolute\",width:\"100%\",textAlign:\"center\",top:\"25%\",color:\"#FFFFFF\"},children:[/*#__PURE__*/_jsx(Spin,{}),\" connecting to camera...\"]}),/*#__PURE__*/_jsx(QrReader,{delay:250,resolution:1200,onError:function onError(e){console.log(\"SCAN ERROR\",e);setScan(false);message.error(\"Camera Error: \"+e.toString());},onScan:function onScan(newValue){if(newValue){console.log(\"SCAN VALUE\",newValue);if(newValue&&newValue.length==66&&newValue.indexOf(\"0x\")===0){console.log(\"This might be a PK...\",newValue);setTimeout(function(){console.log(\"opening...\");var a=document.createElement(\"a\");document.body.appendChild(a);a.style=\"display: none\";//a.href = \"https://punkwallet.io/pk#\"+newValue;\na.click();document.body.removeChild(a);},250);setScan(false);updateAddress();}else if(newValue&&newValue.indexOf&&newValue.indexOf(\"http\")===0){console.log(\"this is a link, following...\");setTimeout(function(){console.log(\"opening...\");var a=document.createElement(\"a\");document.body.appendChild(a);a.style=\"display: none\";a.href=newValue;a.click();document.body.removeChild(a);},250);setScan(false);updateAddress();}else{var possibleNewValue=newValue;possibleNewValue=possibleNewValue.replace(\"ethereum:\",\"\");possibleNewValue=possibleNewValue.replace(\"eth:\",\"\");console.log(\"possibleNewValue\",possibleNewValue);if(possibleNewValue.indexOf(\"/\")>=0){possibleNewValue=possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));console.log(\"CLEANED VALUE\",possibleNewValue);}setScan(false);updateAddress(possibleNewValue);}}},style:{width:\"100%\"}})]}):\"\";var part1=currentValue&&currentValue.substr&&currentValue.substr(2,20);var part2=currentValue&&currentValue.substr&&currentValue.substr(22);var x=parseInt(part1,16)%100;var y=parseInt(part2,16)%100;props.hoistScanner(function(){setScan(!scan);});return/*#__PURE__*/_jsxs(\"div\",{children:[scanner,/*#__PURE__*/_jsx(Input,{disabled:props.disabled,id:\"0xAddress\"// name it something other than address for auto fill doxxing\n,name:\"0xAddress\"// name it something other than address for auto fill doxxing\n,autoComplete:\"off\",autoFocus:props.autoFocus,placeholder:props.placeholder?props.placeholder:\"address\",value:ens||currentValue,addonAfter:scannerButton,onChange:function onChange(e){updateAddress(e.target.value);}})]});}","map":{"version":3,"sources":["/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/packages/react-app/src/components/AddressInput.jsx"],"names":["CameraOutlined","QrcodeOutlined","Badge","Input","message","Spin","useLookupAddress","React","useCallback","useState","QrReader","Blockie","AddressInput","props","address","value","setValue","scan","setScan","currentValue","ens","ensProvider","scannerButton","marginTop","cursor","color","fontSize","onChange","updateAddress","newValue","console","log","indexOf","walletConnect","resolveName","possibleAddress","scanner","zIndex","position","left","top","width","backgroundColor","textAlign","e","error","toString","length","setTimeout","a","document","createElement","body","appendChild","style","click","removeChild","href","possibleNewValue","replace","substr","lastIndexOf","part1","part2","x","parseInt","y","hoistScanner","disabled","autoFocus","placeholder","target"],"mappings":"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","sourcesContent":["import { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Badge, Input, message, Spin } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\nimport React, { useCallback, useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport Blockie from \"./Blockie\";\n\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n  Displays an address input with QR scan option\n  ~ How can I use? ~\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n  ~ Features ~\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.address);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ color: \"#000000\", fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ color: \"#000000\", fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const { ensProvider, onChange } = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n\n        console.log(\"SCAN\",newValue)\n\n        /*console.log(\"ðŸ”‘ Incoming Private Key...\");\n        rawPK = incomingPK;\n        burnerConfig.privateKey = rawPK;\n        window.history.pushState({}, \"\", \"/\");\n        const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n        if (currentPrivateKey && currentPrivateKey !== rawPK) {\n          window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n        }\n        window.localStorage.setItem(\"metaPrivateKey\", rawPK);*/\n        if(newValue && newValue.indexOf && newValue.indexOf(\"wc:\")===0){\n          props.walletConnect(newValue)\n        }else{\n          let address = newValue;\n          setValue(address);\n          if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n            try {\n              const possibleAddress = await ensProvider.resolveName(address);\n              if (possibleAddress) {\n                address = possibleAddress;\n              }\n              // eslint-disable-next-line no-empty\n            } catch (e) {}\n          }\n          setValue(address);\n          if (typeof onChange === \"function\") {\n            onChange(address);\n          }\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: \"-25%\",\n        top: \"-150%\",\n        width: \"150%\",\n        backgroundColor: \"#333333\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <div\n        style={{ fontSize: 16, position: \"absolute\", width: \"100%\", textAlign: \"center\", top: \"25%\", color: \"#FFFFFF\" }}\n      >\n        <Spin /> connecting to camera...\n      </div>\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n          message.error(\"Camera Error: \" + e.toString());\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\",newValue);\n\n            if(newValue && newValue.length==66 && newValue.indexOf(\"0x\")===0){\n              console.log(\"This might be a PK...\",newValue)\n              setTimeout(()=>{\n                console.log(\"opening...\")\n                let a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style = \"display: none\";\n                //a.href = \"https://punkwallet.io/pk#\"+newValue;\n                a.click();\n                document.body.removeChild(a);\n              },250)\n              setScan(false);\n              updateAddress();\n            }else if(newValue && newValue.indexOf && newValue.indexOf(\"http\")===0){\n              console.log(\"this is a link, following...\")\n              setTimeout(()=>{\n                console.log(\"opening...\")\n                let a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style = \"display: none\";\n                a.href = newValue;\n                a.click();\n                document.body.removeChild(a);\n              },250)\n\n              setScan(false);\n              updateAddress();\n            }else{\n              let possibleNewValue = newValue;\n              possibleNewValue = possibleNewValue.replace(\"ethereum:\", \"\");\n              possibleNewValue = possibleNewValue.replace(\"eth:\", \"\");\n              console.log(\"possibleNewValue\",possibleNewValue)\n              if (possibleNewValue.indexOf(\"/\") >= 0) {\n                possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n                console.log(\"CLEANED VALUE\", possibleNewValue);\n              }\n              setScan(false);\n              updateAddress(possibleNewValue);\n            }\n\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const part1 = currentValue && currentValue.substr && currentValue.substr(2, 20);\n  const part2 = currentValue && currentValue.substr && currentValue.substr(22);\n  const x = parseInt(part1, 16) % 100;\n  const y = parseInt(part2, 16) % 100;\n\n  props.hoistScanner(() => {\n    setScan(!scan);\n  });\n\n  return (\n    <div>\n      {scanner}\n\n      <Input\n        disabled={props.disabled}\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}