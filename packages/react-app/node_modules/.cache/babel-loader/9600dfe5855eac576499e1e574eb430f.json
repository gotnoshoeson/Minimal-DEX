{"ast":null,"code":"import _slicedToArray from\"/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Portis from\"@portis/web3\";import WalletConnectProvider from\"@walletconnect/web3-provider\";import{Alert,Button,Col,Menu,Row}from\"antd\";import\"antd/dist/antd.css\";import Authereum from\"authereum\";import{useBalance,useContractLoader,useContractReader,useGasPrice,useOnBlock,useUserProviderAndSigner}from\"eth-hooks\";import{useExchangeEthPrice}from\"eth-hooks/dapps/dex\";import Fortmatic from\"fortmatic\";import React,{useCallback,useEffect,useState}from\"react\";import{BrowserRouter,Link,Route,Switch}from\"react-router-dom\";//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from\"walletlink\";import Web3Modal from\"web3modal\";import\"./App.css\";import{Account,Contract,Faucet,GasGauge,Header,Ramp,ThemeSwitch,TokenBalance,Dex}from\"./components\";import{INFURA_ID,NETWORK,NETWORKS}from\"./constants\";import{Transactor}from\"./helpers\";import{useContractConfig}from\"./hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"ethers\"),ethers=_require.ethers;/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/ /// üì° What chain are your contracts deployed to?\nvar targetNetwork=NETWORKS.rinkeby;// <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\nvar DEBUG=true;var NETWORKCHECK=true;// üõ∞ providers\nif(DEBUG)console.log(\"üì° Connecting to Mainnet Ethereum\");// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nvar scaffoldEthProvider=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\"):null;var poktMainnetProvider=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\"):null;var mainnetInfura=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\"+INFURA_ID):null;// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\nvar localProviderUrl=targetNetwork.rpcUrl;// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nvar localProviderUrlFromEnv=process.env.REACT_APP_PROVIDER?process.env.REACT_APP_PROVIDER:localProviderUrl;if(DEBUG)console.log(\"üè† Connecting to provider:\",localProviderUrlFromEnv);var localProvider=new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);// üî≠ block explorer URL\nvar blockExplorer=targetNetwork.blockExplorer;// Coinbase walletLink init\nvar walletLink=new WalletLink({appName:\"coinbase\"});// WalletLink provider\nvar walletLinkProvider=walletLink.makeWeb3Provider(\"https://mainnet.infura.io/v3/\".concat(INFURA_ID),1);// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/var web3Modal=new Web3Modal({network:\"mainnet\",// Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\ncacheProvider:true,// optional\ntheme:\"light\",// optional. Change to \"dark\" for a dark theme.\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// required\noptions:{bridge:\"https://polygon.bridge.walletconnect.org\",infuraId:INFURA_ID,rpc:{1:\"https://mainnet.infura.io/v3/\".concat(INFURA_ID),// mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n42:\"https://kovan.infura.io/v3/\".concat(INFURA_ID),100:\"https://dai.poa.network\"// xDai\n}}},portis:{display:{logo:\"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",name:\"Portis\",description:\"Connect to Portis App\"},package:Portis,options:{id:\"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"}},fortmatic:{package:Fortmatic,// required\noptions:{key:\"pk_live_5A7C91B2FC585A17\"// required\n}},// torus: {\n//   package: Torus,\n//   options: {\n//     networkParams: {\n//       host: \"https://localhost:8545\", // optional\n//       chainId: 1337, // optional\n//       networkId: 1337 // optional\n//     },\n//     config: {\n//       buildEnv: \"development\" // optional\n//     },\n//   },\n// },\n\"custom-walletlink\":{display:{logo:\"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",name:\"Coinbase\",description:\"Connect to Coinbase Wallet (not Coinbase App)\"},package:walletLinkProvider,connector:function(){var _connector=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider,_options){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return provider.enable();case 2:return _context.abrupt(\"return\",provider);case 3:case\"end\":return _context.stop();}}},_callee);}));function connector(_x,_x2){return _connector.apply(this,arguments);}return connector;}()},authereum:{package:Authereum// required\n}}});function App(props){var mainnetProvider=poktMainnetProvider&&poktMainnetProvider._isProvider?poktMainnetProvider:scaffoldEthProvider&&scaffoldEthProvider._network?scaffoldEthProvider:mainnetInfura;var _useState=useState(),_useState2=_slicedToArray(_useState,2),injectedProvider=_useState2[0],setInjectedProvider=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var logoutOfWeb3Modal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3Modal.clearCachedProvider();case 2:if(!(injectedProvider&&injectedProvider.provider&&typeof injectedProvider.provider.disconnect==\"function\")){_context2.next=5;break;}_context2.next=5;return injectedProvider.provider.disconnect();case 5:setTimeout(function(){window.location.reload();},1);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function logoutOfWeb3Modal(){return _ref.apply(this,arguments);};}();/* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */var price=useExchangeEthPrice(targetNetwork,mainnetProvider);/* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */var gasPrice=useGasPrice(targetNetwork,\"fast\");// Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\nvar userProviderAndSigner=useUserProviderAndSigner(injectedProvider,localProvider);var userSigner=userProviderAndSigner.signer;useEffect(function(){function getAddress(){return _getAddress.apply(this,arguments);}function _getAddress(){_getAddress=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var newAddress;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!userSigner){_context3.next=5;break;}_context3.next=3;return userSigner.getAddress();case 3:newAddress=_context3.sent;setAddress(newAddress);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _getAddress.apply(this,arguments);}getAddress();},[userSigner]);// You can warn the user if you would like them to be on a specific network\nvar localChainId=localProvider&&localProvider._network&&localProvider._network.chainId;var selectedChainId=userSigner&&userSigner.provider&&userSigner.provider._network&&userSigner.provider._network.chainId;// For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n// The transactor wraps transactions and provides notificiations\nvar tx=Transactor(userSigner,gasPrice);// Faucet Tx can be used to send funds from the faucet\nvar faucetTx=Transactor(localProvider,gasPrice);// üèó scaffold-eth is full of handy hooks like this one to get your balance:\nvar yourLocalBalance=useBalance(localProvider,address);// Just plug in different üõ∞ providers to get your balance on different chains:\nvar yourMainnetBalance=useBalance(mainnetProvider,address);var contractConfig=useContractConfig();// Load in your local üìù contract and read a value from it:\nvar readContracts=useContractLoader(localProvider,contractConfig);// If you want to make üîê write transactions to your contracts, use the userSigner:\nvar writeContracts=useContractLoader(userSigner,contractConfig,localChainId);// EXTERNAL CONTRACT EXAMPLE:\n//\n// If you want to bring in the mainnet DAI contract it would look like:\nvar mainnetContracts=useContractLoader(mainnetProvider,contractConfig);// If you want to call a function on a new block\nuseOnBlock(mainnetProvider,function(){console.log(\"\\u26D3 A new mainnet block is here: \".concat(mainnetProvider._lastBlockNumber));});// Then read your DAI balance like:\nvar myMainnetDAIBalance=useContractReader(mainnetContracts,\"DAI\",\"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);/*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */ //\n// üß´ DEBUG üë®üèª‚Äçüî¨\n//\nuseEffect(function(){if(DEBUG&&mainnetProvider&&address&&selectedChainId&&yourLocalBalance&&yourMainnetBalance&&readContracts&&writeContracts&&mainnetContracts){console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");console.log(\"üåé mainnetProvider\",mainnetProvider);console.log(\"üè† localChainId\",localChainId);console.log(\"üë©‚Äçüíº selected address:\",address);console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId);console.log(\"üíµ yourLocalBalance\",yourLocalBalance?ethers.utils.formatEther(yourLocalBalance):\"...\");console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?ethers.utils.formatEther(yourMainnetBalance):\"...\");console.log(\"üìù readContracts\",readContracts);console.log(\"üåç DAI contract on mainnet:\",mainnetContracts);console.log(\"üíµ yourMainnetDAIBalance\",myMainnetDAIBalance);console.log(\"üîê writeContracts\",writeContracts);}},[mainnetProvider,address,selectedChainId,yourLocalBalance,yourMainnetBalance,readContracts,writeContracts,mainnetContracts]);var networkDisplay=\"\";if(NETWORKCHECK&&localChainId&&selectedChainId&&localChainId!==selectedChainId){var networkSelected=NETWORK(selectedChainId);var networkLocal=NETWORK(localChainId);if(selectedChainId===1337&&localChainId===31337){networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network ID\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:\"chain id 1337\"}),\" for localhost and you need to change it to \",/*#__PURE__*/_jsx(\"b\",{children:\"31337\"}),\" to work with HardHat.\",/*#__PURE__*/_jsx(\"div\",{children:\"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"})]}),type:\"error\",closable:false})});}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:networkSelected&&networkSelected.name}),\" selected and you need to be on\",\" \",/*#__PURE__*/_jsx(Button,{onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var ethereum,data,switchTx;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:ethereum=window.ethereum;data=[{chainId:\"0x\"+targetNetwork.chainId.toString(16),chainName:targetNetwork.name,nativeCurrency:targetNetwork.nativeCurrency,rpcUrls:[targetNetwork.rpcUrl],blockExplorerUrls:[targetNetwork.blockExplorer]}];console.log(\"data\",data);_context4.prev=3;_context4.next=6;return ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:data[0].chainId}]});case 6:switchTx=_context4.sent;_context4.next=19;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](3);_context4.prev=11;_context4.next=14;return ethereum.request({method:\"wallet_addEthereumChain\",params:data});case 14:switchTx=_context4.sent;_context4.next=19;break;case 17:_context4.prev=17;_context4.t1=_context4[\"catch\"](11);case 19:if(switchTx){console.log(switchTx);}case 20:case\"end\":return _context4.stop();}}},_callee4,null,[[3,9],[11,17]]);})),children:/*#__PURE__*/_jsx(\"b\",{children:networkLocal&&networkLocal.name})})]}),type:\"error\",closable:false})});}}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:-1,position:\"absolute\",right:154,top:28,padding:16,color:targetNetwork.color},children:targetNetwork.name});}var loadWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var provider;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return web3Modal.connect();case 2:provider=_context5.sent;setInjectedProvider(new ethers.providers.Web3Provider(provider));provider.on(\"chainChanged\",function(chainId){console.log(\"chain changed to \".concat(chainId,\"! updating providers\"));setInjectedProvider(new ethers.providers.Web3Provider(provider));});provider.on(\"accountsChanged\",function(){console.log(\"account changed!\");setInjectedProvider(new ethers.providers.Web3Provider(provider));});// Subscribe to session disconnection\nprovider.on(\"disconnect\",function(code,reason){console.log(code,reason);logoutOfWeb3Modal();});case 7:case\"end\":return _context5.stop();}}},_callee5);})),[setInjectedProvider]);useEffect(function(){if(web3Modal.cachedProvider){loadWeb3Modal();}},[loadWeb3Modal]);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),route=_useState6[0],setRoute=_useState6[1];useEffect(function(){setRoute(window.location.pathname);},[setRoute]);var faucetHint=\"\";var faucetAvailable=localProvider&&localProvider.connection&&targetNetwork.name.indexOf(\"local\")!==-1;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),faucetClicked=_useState8[0],setFaucetClicked=_useState8[1];if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId===31337&&yourLocalBalance&&ethers.utils.formatEther(yourLocalBalance)<=0){faucetHint=/*#__PURE__*/_jsx(\"div\",{style:{padding:16},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(){faucetTx({to:address,value:ethers.utils.parseEther(\"1\")});setFaucetClicked(true);},children:\"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),networkDisplay,/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(Menu,{style:{textAlign:\"center\"},selectedKeys:[route],mode:\"horizontal\",children:[/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){setRoute(\"/\");},to:\"/\",children:\"YourContract\"})},\"/\"),/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){setRoute(\"/contracts\");},to:\"/contracts\",children:\"Debug Contracts\"})},\"/contracts\")]}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:readContracts&&readContracts.DEX&&address&&localProvider?/*#__PURE__*/_jsx(Dex,{address:address,tx:tx,writeContracts:writeContracts,localProvider:localProvider,mainnetProvider:mainnetProvider,readContracts:readContracts,blockExplorer:blockExplorer,contractConfig:contractConfig,signer:userSigner,price:price}):\"\"}),/*#__PURE__*/_jsxs(Route,{path:\"/contracts\",children:[/*#__PURE__*/_jsx(Contract,{name:\"DEX\",signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig}),/*#__PURE__*/_jsx(Contract,{name:\"Balloons\",signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig})]})]})]}),/*#__PURE__*/_jsx(ThemeSwitch,{}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"right\",right:0,top:0,padding:10},children:[/*#__PURE__*/_jsx(Account,{address:address,localProvider:localProvider,userSigner:userSigner,mainnetProvider:mainnetProvider,price:price,web3Modal:web3Modal,loadWeb3Modal:loadWeb3Modal,logoutOfWeb3Modal:logoutOfWeb3Modal,blockExplorer:blockExplorer}),/*#__PURE__*/_jsx(TokenBalance,{name:\"Balloons\",img:\"üéà\",address:address,contracts:readContracts}),faucetHint]}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"left\",left:0,bottom:20,padding:10},children:[/*#__PURE__*/_jsxs(Row,{align:\"middle\",gutter:[4,4],children:[/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Ramp,{price:price,address:address,networks:NETWORKS})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:0.8},children:/*#__PURE__*/_jsx(GasGauge,{gasPrice:gasPrice})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:1},children:/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");},size:\"large\",shape:\"round\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:8},role:\"img\",\"aria-label\":\"support\",children:\"\\uD83D\\uDCAC\"}),\"Support\"]})})]}),/*#__PURE__*/_jsx(Row,{align:\"middle\",gutter:[4,4],children:/*#__PURE__*/_jsx(Col,{span:24,children:/*  if the local provider has a signer, let's show the faucet:  */faucetAvailable?/*#__PURE__*/_jsx(Faucet,{localProvider:localProvider,price:price,ensProvider:mainnetProvider}):\"\"})})]})]});}export default App;","map":{"version":3,"sources":["/Users/daddio/Documents/Scaffold-Eth/SpeedRunEthereum/Challenge3/challenge-5-dex/packages/react-app/src/App.jsx"],"names":["Portis","WalletConnectProvider","Alert","Button","Col","Menu","Row","Authereum","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","Fortmatic","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","WalletLink","Web3Modal","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","TokenBalance","Dex","INFURA_ID","NETWORK","NETWORKS","Transactor","useContractConfig","require","ethers","targetNetwork","rinkeby","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum","App","props","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","params","switchTx","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","textAlign","DEX","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, TokenBalance, Dex } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useContractConfig } from \"./hooks\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n  : null;\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  const contractConfig = useContractConfig();\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"1\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              YourContract\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/contracts\">\n            <Link\n              onClick={() => {\n                setRoute(\"/contracts\");\n              }}\n              to=\"/contracts\"\n            >\n              Debug Contracts\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {readContracts && readContracts.DEX && address && localProvider ? (\n              <Dex\n                address={address}\n                tx={tx}\n                writeContracts={writeContracts}\n                localProvider={localProvider}\n                mainnetProvider={mainnetProvider}\n                readContracts={readContracts}\n                blockExplorer={blockExplorer}\n                contractConfig={contractConfig}\n                signer={userSigner}\n                price={price}\n              />\n            ) : (\n              \"\"\n            )}\n          </Route>\n\n          <Route path=\"/contracts\">\n            <Contract\n              name=\"DEX\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            <Contract\n              name=\"Balloons\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n\n        <TokenBalance name={\"Balloons\"} img={\"üéà\"} address={address} contracts={readContracts} />\n        {faucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}